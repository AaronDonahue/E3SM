%!PS-Adobe-3.0
%%Title: iac_comp_mod.F90
%%Creator: ps-print v7.3.5
%%For: Tim Shippert
%%CreationDate: 14:29:10 Aug 07 2017
%%Orientation: Portrait
%%DocumentNeededResources: font Times-Roman Times-Italic
%%+ font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%DocumentSuppliedResources: procset PSPrintUserDefinedPrologue-shippert 0 0
%%DocumentMedia: Letter 612 792 0 () ()
%%PageOrder: Ascend
%%Pages: (atend)
%%Requirements:
%%EndComments
%%BeginDefaults
%%PageMedia: Letter
%%EndDefaults

%%BeginProlog

/languagelevel where{pop}{/languagelevel 1 def}ifelse
/ErrorMessage  1 def

% === BEGIN ps-print prologue 0
% version: 6.0

% Copyright (C) 2000-2014 Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


%%BeginProcSet: ErrorHandler
% Downloaded Error Break-page handler
% Adapted from:
%     PostScript Language Program Design,
%     Adobe Systems Incorporated.
%     Appendix A, pages 217-219

/ps$brkpage where{pop}
{
 /ps$brkpage 64 dict def
 ps$brkpage begin
  /tx 0 def/ty 0 def/toy 0 def/tox 0 def
  /prnt{
   dup type/stringtype ne{=string cvs}if
   dup length 6 mul
   /tx exch def/ty 10 def
   currentpoint/toy exch def/tox exch def
   1 setgray newpath
   tox toy 2 sub moveto
   0 ty rlineto tx 0 rlineto
   0 ty neg rlineto
   closepath fill
   tox toy moveto 0 setgray show
  }bind def
  /nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
  /=={/cp 0 def typeprint nl}def
  /typeprint{dup type dup currentdict exch known{exec}{unknowntype}ifelse}readonly def
  /lmargin 72 def
  /rmargin 72 def
  /tprint{
   dup length cp add rmargin gt{nl/cp 0 def}if
   dup length cp add/cp exch def
   prnt
  }readonly def
  /cvsprint{=string cvs tprint( )tprint}readonly def
  /unknowntype{exch pop cvlit(??)tprint cvsprint}readonly def
  /integertype{cvsprint}readonly def
  /realtype{cvsprint}readonly def
  /booleantype{cvsprint}readonly def
  /operatortype{(//)tprint cvsprint}readonly def
  /marktype{pop(-mark-)tprint}readonly def
  /dicttype{pop(-dictionary-)tprint}readonly def
  /nulltype{pop(-null-)tprint}readonly def
  /filetype{pop(-filestream-)tprint}readonly def
  /savetype{pop(-savelevel-)tprint}readonly def
  /fonttype{pop(-fontid-)tprint}readonly def
  /nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
  /stringtype{
   dup rcheck
   {(\()tprint tprint(\))tprint}
   {pop(-string-)tprint}ifelse}readonly def
  /arraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-array-)tprint}ifelse}readonly def
  /packedarraytype{
   dup rcheck
   {dup xcheck
    {({)tprint{typeprint}forall(})tprint}
    {([)tprint{typeprint}forall(])tprint}ifelse}
   {pop(-packedarray-)tprint}ifelse}readonly def
  /courier/Courier findfont 10 scalefont def
  /OLDhandleerror errordict/handleerror get def
 end %ps$brkpage

 /handleerror{
  systemdict begin $error begin ps$brkpage begin
  newerror
  {/newerror false store vmstatus pop pop 0 ne{grestoreall}if
   initgraphics
   ErrorMessage 1 and 0 ne{ % print on paper
    courier setfont lmargin 720 moveto
    (# ERROR: )prnt errorname prnt nl
    (# OFFENDING COMMAND: )prnt/command load prnt
    $error/ostack known
    {nl nl(# STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if
    $error/errorinfo known
    {nl nl(# ERRORINFO:)prnt nl nl $error/errorinfo get aload length{==}repeat}if
    systemdict/showpage get exec}if
   ErrorMessage 2 and 0 ne{ % send back to printing system
    (\%\%[ Error: )print errorname =print
    (; OffendingCommand: )print/command load =print
    $error/errorinfo known
    {(; ErrorInfo:)print $error/errorinfo get aload length{( )=print =print}repeat}if
    ( ]\%\%)= flush
    (\%\%[ Rest of job is ignored ]\%\%)= flush}if
   /newerror true store}if
  end end end
  stop
 } % handleerror
 dup 0 systemdict put % replace name by actual dict object
 dup 4 ps$brkpage put % replace name by dict object
 bind readonly

 errordict 3 1 roll put % put proc in errordict as /handleerror
}ifelse
%%EndProcSet


% operators for language level 2 only

(<<)cvn where			% << operator
{pop/BMark(<<)cvn load def}
{/BMark{mark}bind def}ifelse
(>>)cvn where			% >> operator
{pop/EMark(>>)cvn load def}
{/EMark{counttomark 2 idiv dup dict begin{def}repeat pop currentdict end}bind def}ifelse
/setpagedevice where		% setpagedevice
{pop}
{/setpagedevice{pop}bind def}ifelse
/packedarray where		% packedarray
{pop}
{/packedarray{array astore readonly}bind def}ifelse


% device dependent operators

/DefOp{
 dup where{pop pop pop}
 {exch dup where{pop}{pop/pop}ifelse load def}ifelse}def

/duplexmode/setduplexmode DefOp
/tumble/settumble DefOp

% === END ps-print prologue 0

%%BeginResource: procset PSPrintUserDefinedPrologue-shippert 0 0


%%EndResource

/LandscapeMode       false def
/UpsideDown          false def
/NumberOfColumns     1 def
/LandscapePageHeight 792.0 def
/PrintPageWidth      498.6141732283465 def
/PrintWidth   498.6141732283465 def
/PrintHeight  643.7029732283465 def
/LeftMargin   56.69291338582677 def
/RightMargin  56.69291338582677 def
/InterColumn  56.69291338582677 def
/BottomMargin 42.51968503937008 def
/TopMargin    42.51968503937008 def
/HeaderOffset 28.346456692913385 def
/HeaderPad    2.4276 def
/FooterOffset 28.346456692913385 def
/FooterPad    0 def
/FooterLines  2 def
/ShowNofN           true def
/SwitchHeader       false def
/PrintOnlyOneHeader false def
/PrintHeader        true def
/PrintHeaderFrame   true def
/HeaderFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/PrintFooter        false def
/PrintFooterFrame   true def
/FooterFrameProperties [0.000 0.900 0.400 0.000 0.000 ]def
/LineSpacing      0 def
/ParagraphSpacing 0 def
/LineHeight       8.967500000000001 def
/LinesPerColumn   72 def
/WarnPaperSize    true def
/Zebra            false def
/PrintLineNumber  false def
/SyncLineZebra    false def
/ZebraFollow      0 def
/PrintLineStep    1 def
/PrintLineStart   1 def
/LineNumberColor  [0.000 0.000 0.000] def
/ZebraHeight      3 def
/ZebraColor       0.950 def
/BackgroundColor  [1.000 1.000 1.000] def
/UseSetpagedevice false def

/PageWidth PrintPageWidth LeftMargin add RightMargin add def

/N-Up           1 def
/N-Up-Landscape false def
/N-Up-Border    true def
/N-Up-Lines     1 def
/N-Up-Columns   1 def
/N-Up-Missing   0 def
/N-Up-Margin    28.346456692913385 def
/N-Up-Repeat    N-Up-Lines def
/N-Up-End       N-Up-Columns def
/N-Up-XColumn   PageWidth def
/N-Up-YColumn   0 def
/N-Up-XLine     N-Up-End 1 sub PageWidth mul neg def
/N-Up-YLine     LandscapePageHeight neg def
/N-Up-XStart    0 def
/N-Up-YStart    0 def

% === BEGIN ps-print prologue 1
% version: 6.1

% Copyright (C) 2000-2014 Free Software Foundation, Inc.

% This file is part of GNU Emacs.

% GNU Emacs is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.

% GNU Emacs is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.

% You should have received a copy of the GNU General Public License
% along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

% As a special exception, the copyright holders of this module give
% you permission to include the module in a Postscript file generated
% by Emacs or other free software together with the result of
% converting text to be printed, regardless of the license terms of
% that text, and to use under terms of your choice the page images
% resulting from formatting said combination.  If you modify this
% module, you may extend this exception to your version of the module
% but you are not obligated to do so.  If you do not wish to do so,
% delete this exception statement from your version.


% ISOLatin1Encoding stolen from ps_init.ps in GhostScript 2.6.1.4:
/ISOLatin1Encoding where{pop}{
% -- The ISO Latin-1 encoding vector isn't known, so define it.
% -- The first half is the same as the standard encoding,
% -- except for minus instead of hyphen at code 055.
/ISOLatin1Encoding
StandardEncoding 0 45 getinterval aload pop
    /minus
StandardEncoding 46 82 getinterval aload pop
%*** NOTE: the following are missing in the Adobe documentation,
%*** but appear in the displayed table:
%*** macron at 0225, dieresis at 0230, cedilla at 0233, space at 0240.
% 0200 (128)
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
    /dotlessi/grave/acute/circumflex/tilde/macron/breve/dotaccent
    /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
% 0240 (160)
    /space/exclamdown/cent/sterling
	/currency/yen/brokenbar/section
    /dieresis/copyright/ordfeminine/guillemotleft
	/logicalnot/hyphen/registered/macron
    /degree/plusminus/twosuperior/threesuperior
	/acute/mu/paragraph/periodcentered
    /cedilla/onesuperior/ordmasculine/guillemotright
	/onequarter/onehalf/threequarters/questiondown
% 0300 (192)
    /Agrave/Aacute/Acircumflex/Atilde
	/Adieresis/Aring/AE/Ccedilla
    /Egrave/Eacute/Ecircumflex/Edieresis
	/Igrave/Iacute/Icircumflex/Idieresis
    /Eth/Ntilde/Ograve/Oacute
	/Ocircumflex/Otilde/Odieresis/multiply
    /Oslash/Ugrave/Uacute/Ucircumflex
	/Udieresis/Yacute/Thorn/germandbls
% 0340 (224)
    /agrave/aacute/acircumflex/atilde
	/adieresis/aring/ae/ccedilla
    /egrave/eacute/ecircumflex/edieresis
	/igrave/iacute/icircumflex/idieresis
    /eth/ntilde/ograve/oacute
	/ocircumflex/otilde/odieresis/divide
    /oslash/ugrave/uacute/ucircumflex
	/udieresis/yacute/thorn/ydieresis
256 packedarray def
}ifelse

/reencodeFontISO{ %def
  dup
  length 12 add dict	% Make a new font (a new dict the same size
			% as the old one) with room for our new symbols.

  begin			% Make the new font the current dictionary.

    % Copy each of the symbols from the old dictionary
    % to the new one except for the font ID.
    {1 index/FID ne{def}{pop pop}ifelse}forall

    % Override the encoding with the ISOLatin1 encoding.
    currentdict/FontType get 0 ne{/Encoding ISOLatin1Encoding def}if

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.

%          ^    (x2 y2)
%          |       |
%          |       v
%          |  +----+ - -
%          |  |    |   ^
%          |  |    |   | Ascent (usually > 0)
%          |  |    |   |
% (0 0) -> +--+----+-------->
%             |    |   |
%             |    |   v Descent (usually < 0)
% (x1 y1) --> +----+ - -

    currentdict/FontType get 0 ne
    {/FontBBox load aload pop			% -- x1 y1 x2 y2
     FontMatrix transform/Ascent  exch def pop
     FontMatrix transform/Descent exch def pop}
    {/PrimaryFont FDepVector 0 get def
     PrimaryFont/FontBBox get aload pop
     PrimaryFont/FontMatrix get transform/Ascent exch def pop
     PrimaryFont/FontMatrix get transform/Descent exch def pop}ifelse

    /FontHeight Ascent Descent sub def	% use `sub' because descent < 0

    % Define these in case they're not in the FontInfo
    % (also, here they're easier to get to).
    /UnderlinePosition  Descent 0.70 mul def
    /OverlinePosition   Descent UnderlinePosition sub Ascent add def
    /StrikeoutPosition  Ascent 0.30 mul def
    /LineThickness      FontHeight 0.05 mul def
    /Xshadow            FontHeight  0.08 mul def
    /Yshadow            FontHeight -0.09 mul def
    /SpaceBackground    Descent neg UnderlinePosition add def
    /XBox               Descent neg def
    /YBox               LineThickness 0.7 mul def

    currentdict		% Leave the new font on the stack
    end			% Stop using the font as the current dictionary.
    definefont		% Put the font into the font dictionary
    pop			% Discard the returned font.
}bind def

% Font definition
/DefFont{findfont exch scalefont reencodeFontISO}def

% Font selection
/F{
  findfont
  dup/Ascent            get/Ascent            exch def
  dup/Descent           get/Descent           exch def
  dup/FontHeight        get/FontHeight        exch def
  dup/UnderlinePosition get/UnderlinePosition exch def
  dup/OverlinePosition  get/OverlinePosition  exch def
  dup/StrikeoutPosition get/StrikeoutPosition exch def
  dup/LineThickness     get/LineThickness     exch def
  dup/Xshadow           get/Xshadow           exch def
  dup/Yshadow           get/Yshadow           exch def
  dup/SpaceBackground   get/SpaceBackground   exch def
  dup/XBox              get/XBox              exch def
  dup/YBox              get/YBox              exch def
  setfont
}def

/FG/setrgbcolor load def

/bg false def
/BG{
  dup/bg exch def
  {[4 1 roll]}
  {[1.0 1.0 1.0]}
  ifelse
  /bgcolor exch def
}def

%  B    width    C
%   +-----------+
%               | Ascent  (usually > 0)
% A +           +
%               | Descent (usually < 0)
%   +-----------+
%  E    width    D

/dobackground{				% width --
  currentpoint				% -- width x y
  gsave
    newpath
    moveto				% A (x y)
    0 Ascent rmoveto			% B
    dup 0 rlineto			% C
    0 Descent Ascent sub rlineto	% D
    neg 0 rlineto			% E
    closepath
    FillBgColor
  grestore
}def

/eolbg{					% dobackground until right margin
  PrintWidth				% -- x-eol
  currentpoint pop			% -- cur-x
  sub					% -- width until eol
  dobackground
}def

/LineHS LineHeight LineSpacing add def
/ParagraphHS LineHeight ParagraphSpacing add def
/PSL{/h exch def bg{eolbg}if  0  currentpoint exch pop h sub  moveto}def
/PLN{PrintLineNumber{doLineNumber}if}def

/SL{LineHS PSL isLineStep pop}def	% Soft Linefeed

/PHL{ParagraphHS PSL PLN}def		% Paragraph Hard Linefeed
/LHL{LineHS PSL PLN}def			% Hard Linefeed

% Some debug
/dcp{currentpoint exch 40 string cvs print(, )print =}def
/dp{print 2 copy  exch 40 string cvs print(, )print =}def

/W{
  ( )stringwidth	% Get the width of a space in the current font.
  pop			% Discard the Y component.
  mul			% Multiply the width of a space
			% by the number of spaces to plot
  bg{dup dobackground}if
  0 rmoveto
}def

/Effect          0 def
/EffectUnderline false def
/EffectStrikeout false def
/EffectOverline  false def
/EffectShadow    false def
/EffectBox       false def
/EffectOutline   false def

% effect: 1  - underline  2   - strikeout  4  - overline
%         8  - shadow     16  - box        32 - outline
/EF{
  /Effect exch def
  /EffectUnderline Effect 1  and 0 ne def
  /EffectStrikeout Effect 2  and 0 ne def
  /EffectOverline  Effect 4  and 0 ne def
  /EffectShadow    Effect 8  and 0 ne def
  /EffectBox       Effect 16 and 0 ne def
  /EffectOutline   Effect 32 and 0 ne def
}def

% stack:  string  |-  --
/S{
  /xx currentpoint dup Descent add/yy exch def
  Ascent add/YY exch def def
  dup stringwidth pop xx add/XX exch def
  EffectShadow{
    /yy yy Yshadow add def
    /XX XX Xshadow add def
  }if
  bg{
    true
    EffectBox
      {SpaceBackground doBox}
      {xx yy XX YY doRect}
    ifelse
  }if						% background
  EffectBox      {false 0 doBox}if		% box
  EffectShadow   {dup doShadow}if		% shadow
  EffectOutline
    {true doOutline}				% outline
    {show}					% normal text
  ifelse
  EffectUnderline{UnderlinePosition Hline}if	% underline
  EffectStrikeout{StrikeoutPosition Hline}if	% strikeout
  EffectOverline {OverlinePosition  Hline}if	% overline
}bind def

% stack:  position  |-  --
/Hline{
  currentpoint exch pop add dup
  gsave
  newpath
  xx exch moveto
  XX exch lineto
  closepath
  LineThickness setlinewidth stroke
  grestore
}bind def

% stack:  fill-or-not delta  |-  --
/doBox{
  /dd exch def
  xx XBox sub dd sub yy YBox sub dd sub
  XX XBox add dd add YY YBox add dd add
  doRect
}bind def

% stack:  fill-or-not lower-x lower-y upper-x upper-y  |-  --
/doRect{
  /rYY exch def
  /rXX exch def
  /ryy exch def
  /rxx exch def
  gsave
  newpath
  rXX rYY moveto
  rxx rYY lineto
  rxx ryy lineto
  rXX ryy lineto
  closepath
  % top of stack: fill-or-not
  {FillBgColor}
  {LineThickness setlinewidth stroke}ifelse
  grestore
}bind def

% stack:  string  |-  --
/doShadow{
  gsave
  Xshadow Yshadow rmoveto
  false doOutline
  grestore
}bind def

/st 1 string def

% stack:  string fill-or-not  |-  --
/doOutline{
  /-fillp- exch def
  /-ox- currentpoint/-oy- exch def def
  gsave
  LineThickness setlinewidth
  {st 0 3 -1 roll put
   st dup true charpath
   -fillp- {gsave FillBgColor grestore}if
   stroke stringwidth
   -oy- add/-oy- exch def
   -ox- add/-ox- exch def
   -ox- -oy- moveto
  }forall
  grestore
  -ox- -oy- moveto
}bind def

% stack:  --
/FillBgColor{bgcolor aload pop setrgbcolor fill}bind def

% stack:  -- |- boolean
/isLineStep{
  SyncLineZebra
  {PLScounter 0 gt						% or zebra
   {/PLScounter PLScounter 1 sub def PLScounter 0 eq}
   {false}ifelse
   PrintLineStep 1 gt
   {/PrintLineStep PrintLineStep 1 sub def}
   {/PrintLineStep ZebraHeight def
    /PLScounter PrintLineStart def}ifelse}
  {LineNumber PrintLineStart sub PrintLineStep mod 0 eq}ifelse	% or line step
}def

% stack:  --
/doLineNumber{
  /LineNumber where
  {pop
   isLineStep			% or line step
   LineNumber Lines ge or	% or last line
   {currentfont
    gsave
    LineNumberColor SetColor
    /L0 findfont setfont
    LineNumber Lines ge
    {(end      )}
    {LineNumber 6 string cvs(      )strcat}ifelse
    dup stringwidth pop neg 0 rmoveto
    show
    grestore
    setfont}if
    /LineNumber LineNumber 1 add def
  }if
}def

% stack: color-specifier |- --
/SetColor{dup type/realtype eq{setgray}{aload pop setrgbcolor}ifelse}def

% stack: --
/printZebra{
  gsave
  ZebraColor SetColor
  /double-zebra ZebraHeight ZebraHeight add def
  /yiter double-zebra LineHS mul neg def
  /xiter PrintWidth InterColumn add def
  /zebra-line LinesPrinted def
  NumberOfColumns{LinesPerColumn doColumnZebra xiter 0 rmoveto}repeat
  grestore
}def

% stack:  lines-per-column |- --
/doColumnZebra{
  /lpc exch def
  gsave
  ZebraFollow 1 and 0 ne{
    /H ZebraHeight zebra-line ZebraHeight mod sub def
    /lpc lpc H sub def
    zebra-line double-zebra mod ZebraHeight lt
    {H doZebra	% "black" stripe followed by a "white" stripe
     /lpc lpc ZebraHeight sub def
     H ZebraHeight add}
    {H}ifelse	% "white" stripe
    LineHS mul neg 0 exch rmoveto
    /zebra-line zebra-line LinesPerColumn add def
  }if
  /zspacing 0 def
  lpc dup double-zebra idiv{ZebraHeight doZebra 0 yiter rmoveto}repeat
  double-zebra mod dup 0 le{pop}
  {dup ZebraHeight gt
   {pop ZebraHeight}
   {/zspacing LineSpacing def
    ZebraFollow 2 and 0 ne{pop ZebraHeight}if}ifelse
   doZebra}ifelse
  grestore
}def

% stack:  zebra-height (in lines) |- --
/doZebra{
  /zh exch 0.05 sub LineHS mul zspacing sub def
  gsave
  0 LineHeight 0.65 mul rmoveto
  PrintWidth 0 rlineto
  0 zh neg rlineto
  PrintWidth neg 0 rlineto
  0 zh rlineto
  fill
  grestore
}def

% stack: --
/printBackground{
  /BackgroundColor where{
    /LHg LineHeight 0.65 mul def
    /PHg PrintHeight LHg add def
    pop gsave BackgroundColor SetColor
    NumberOfColumns{
     gsave
     0 LHg rmoveto
     PrintWidth 0 rlineto
     0 PHg neg rlineto
     PrintWidth neg 0 rlineto
     0 PHg rlineto
     fill
     grestore
     PrintWidth InterColumn add 0 rmoveto
    }repeat
    grestore
  }if
}def

% tx ty rotation xscale yscale xpos ypos BeginBackImage
/BeginBackImage{
  /-save-image- save def
  /showpage{}def
  translate
  scale
  rotate
  translate
}def

/EndBackImage{-save-image- restore}def

% string fontsize fontname rotation gray xpos ypos ShowBackText
/ShowBackText{
  gsave
  translate
  setgray
  rotate
  findfont exch dup/-offset- exch -0.25 mul def scalefont setfont
  0 -offset- moveto
  /-saveLineThickness- LineThickness def
  /LineThickness 1 def
  false doOutline
  /LineThickness -saveLineThickness- def
  grestore
}def

/SetPageSize{
  BMark/PageSize[PageWidth LandscapePageHeight LandscapeMode{exch}if]EMark setpagedevice
}def

/BeginDoc{
  % ---- Remember space width of the normal text font `f0'.
  /SpaceWidth/f0 findfont setfont( )stringwidth pop def
  % ---- save the state of the document (useful for ghostscript!)
  /docState save def
  % ---- [andrewi] set PageSize based on chosen dimensions
  UseSetpagedevice{
   WarnPaperSize{SetPageSize}{mark{SetPageSize}stopped cleartomark}ifelse
  }if
  /ColumnWidth PrintWidth InterColumn add def
  % ---- define where  printing will start
  /f0 F					% this installs Ascent
  /PrintStartY PrintHeight Ascent sub def
  /ColumnIndex 1 def
  /N-Up-Counter N-Up-End 1 sub def
  /PLScounter PrintLineStart def
}def

/EndDoc{
  % ---- restore the state of the document (useful for ghostscript!)
  docState restore
}def

/BeginDSCPage{
  % ---- when 1st column, save the state of the page
  ColumnIndex 1 eq{/pageState save def}if
  % ---- save the state of the column
  /columnState save def
}def

/PrintHeaderWidth PrintOnlyOneHeader{PrintPageWidth}{PrintWidth}ifelse def

/BeginPage{
  /LinesPrinted exch def
  % ---- when 1st column, print all background effects
  ColumnIndex 1 eq{
    0 PrintStartY moveto		% move to where printing will start
    printBackground
    Zebra{printZebra}if
    printGlobalBackground
    printLocalBackground
  }if
  PrintOnlyOneHeader{ColumnIndex 1 eq}{true}ifelse
  dup PrintHeader and{
    PrintHeaderFrame{HeaderFrame}if
    HeaderText
  }if
  PrintFooter and{
    PrintFooterFrame{FooterFrame}if
    FooterText
  }if
  0 PrintStartY moveto			% move to where printing will start
  /LineNumber where
  {pop
   SyncLineZebra
   {/H PageNumber 1 sub NumberOfColumns mul ColumnIndex 1 sub add
       LinesPerColumn mul ZebraHeight mod def
    /PLScounter H PrintLineStart ge{0}{PrintLineStart H sub}ifelse def
    /PrintLineStep ZebraHeight H sub def}if}if
  PLN
}def

/EndPage{bg{eolbg}if}def

/EndDSCPage{
  ColumnIndex NumberOfColumns eq{
    % ---- restore the state of the page
    pageState restore
    /ColumnIndex 1 def
    % ---- N-up printing
    N-Up 1 gt{
      N-Up-Counter 0 gt
      {% ---- Next page on same row
	/N-Up-Counter N-Up-Counter 1 sub def
	N-Up-XColumn N-Up-YColumn}
      {% ---- Next page on next line
	/N-Up-Counter N-Up-End 1 sub def
	N-Up-XLine N-Up-YLine}ifelse
      translate
    }if
  }{ % else
    % ---- restore the state of the current column
    columnState restore
    % ---- and translate to the next column
    ColumnWidth 0 translate
    /ColumnIndex ColumnIndex 1 add def
  }ifelse
}def

/TextStart{
  LeftMargin BottomMargin
  PrintFooter{
    FooterPad add
    FooterLines FooterLineHeight mul add
    FooterPad add
    FooterOffset add}if
}def

% stack: number-of-pages-per-sheet |- --
/BeginSheet{
  /sheetState save def
  /pages-per-sheet exch def

  % ---- translate to bottom-right corner of Portrait page
  LandscapeMode{
    LandscapePageHeight 0 translate
    90 rotate
  }if
  % ---- [jack] Kludge: my ghostscript window is 21x27.7 instead of 21x29.7
  /JackGhostscript where{pop 1 27.7 29.7 div scale}if
  UpsideDown{PageWidth LandscapePageHeight translate 180 rotate}if
  % ---- N-Up printing
  N-Up 1 gt{
    % ---- landscape
    N-Up-Landscape{
      PageWidth 0 translate
      90 rotate
    }if
    N-Up-Margin dup translate
    % ---- scale
    LandscapeMode{
      /HH PageWidth def
      /WW LandscapePageHeight def
    }{
      /HH LandscapePageHeight def
      /WW PageWidth def
    }ifelse
    /xx 0 def
    N-Up-Landscape{
      /ww WW WW mul N-Up-Lines HH mul div def
      /cc HH N-Up-Columns N-Up-Missing add div def
      ww cc gt{/xx WW def/WW cc ww div WW mul def/xx xx WW sub def}if
    }{
      /hh HH N-Up-Columns N-Up-Missing add div def
      /cc HH N-Up-Lines div def
      hh cc gt{/xx WW def/WW cc hh div WW mul def/xx xx WW sub def}if
    }ifelse
    WW N-Up-Margin sub N-Up-Margin sub
    N-Up-Landscape
    {N-Up-Lines div HH}
    {N-Up-Columns N-Up-Missing add div WW}ifelse
    div dup scale
    LandscapeMode{/yy 0 def}{/yy xx def/xx 0 def}ifelse
    xx N-Up-Repeat 1 sub LandscapePageHeight mul yy add translate
    % ---- go to start position in page matrix
    N-Up-XStart N-Up-Missing 0.5 mul
    LandscapeMode
    {LandscapePageHeight mul N-Up-YStart add}
    {PageWidth mul add N-Up-YStart}ifelse
    translate
  }if
  % ---- translate to lower left corner of TEXT
  TextStart translate

  % ---- N-up printing
  N-Up 1 gt N-Up-Border and pages-per-sheet 0 gt and{
    % ---- page border
    gsave
    0 setgray
    TextStart exch neg exch neg moveto
    N-Up-Repeat
    {N-Up-End
     {gsave
      PageWidth 0 rlineto
      0 LandscapePageHeight rlineto
      PageWidth neg 0 rlineto
      closepath stroke
      grestore
      /pages-per-sheet pages-per-sheet 1 sub def
      pages-per-sheet 0 le{exit}if
      N-Up-XColumn N-Up-YColumn rmoveto
     }repeat
     pages-per-sheet 0 le{exit}if
     N-Up-XLine N-Up-XColumn sub N-Up-YLine rmoveto
    }repeat
    grestore
  }if
}def

/EndSheet{
  showpage
  sheetState restore
}def

/SetHeaderLines{			% nb-lines --
  /HeaderLines exch def
  % ---- bottom up
  HeaderPad
  HeaderLines 1 sub HeaderLineHeight mul add
  HeaderTitleLineHeight add
  HeaderPad add
  /HeaderHeight exch def
}def

/SetFooterLines{			% nb-lines --
  /FooterLines exch def
  % ---- bottom up
  FooterPad
  FooterLines FooterLineHeight mul add
  FooterPad add
  /FooterHeight exch def
}def

% |---------|
% |  tm     |
% |---------|
% |  header |
% |-+-------| <-- (x y)
% |  ho     |
% |---------|
% |  text   |
% |---------|
% |  fo     |
% |---------|
% |  footer |
% |-+-------| <-- (0 0)
% |  bm     |
% |---------|

% -- |- x y
/HeaderFrameStart{0  PrintHeight HeaderOffset add}def
/FooterFrameStart{0  FooterHeight FooterOffset add neg}def

/doFramePath{
  /h exch def
  PrintHeaderWidth	0	rlineto
  0			h	rlineto
  PrintHeaderWidth neg	0	rlineto
  0			h neg	rlineto
}def

/HeaderFramePath{HeaderHeight doFramePath}def
/FooterFramePath{FooterHeight doFramePath}def

% /path-fun /start-fun vector-property doFrame
/doFrame{
  /vecFrame exch def
  /startFrame exch load def
  /pathFrame exch load def
  gsave
    vecFrame 2 get setlinewidth				% frame border width
    % ---- do the shadow of the next rectangle
    startFrame moveto
    1 -1 rmoveto
    pathFrame
    vecFrame 4 get SetColor fill			% frame shadow color
    % ---- do the next rectangle ...
    startFrame moveto
    pathFrame
    gsave vecFrame 1 get SetColor fill grestore		% frame background
    gsave vecFrame 3 get SetColor stroke grestore	% frame border color
  grestore
}def

/HeaderFrame{/HeaderFramePath /HeaderFrameStart HeaderFrameProperties doFrame}def
/FooterFrame{/FooterFramePath /FooterFrameStart FooterFrameProperties doFrame}def

/HeaderStart{
  HeaderFrameStart
  exch HeaderPad add exch	% horizontal pad
  % ---- bottom up
  HeaderPad add			% vertical   pad
  HeaderDescent sub
  HeaderLineHeight HeaderLines 1 sub mul add
}def

/FooterStart{
  FooterFrameStart
  exch FooterPad add exch	% horizontal pad
  % ---- bottom up
  FooterPad add			% vertical   pad
  FooterDescent sub
  FooterLineHeight FooterLines 1 sub mul add
}def

/HeaderClip{HeaderFrameStart moveto HeaderFramePath clip}def
/FooterClip{FooterFrameStart moveto FooterFramePath clip}def

/strcat{
  dup length 3 -1 roll dup length dup 4 -1 roll add string dup
  0 5 -1 roll putinterval
  dup 4 2 roll exch putinterval
}def

/pagenumberstring{
  PageNumber 32 string cvs
  ShowNofN{(/)strcat PageCount 32 string cvs strcat}if
}def

% lines is-right HeaderOrFooterTextLines
/HeaderOrFooterTextLines{
  /is_right exch def
  HFStart moveto
  { % ---- process the lines
   aload pop
   exch F
   gsave
    dup xcheck{exec}if
    is_right{
     dup stringwidth pop
     PrintHeaderWidth exch sub HFPad HFPad add sub 0 rmoveto
    }if
    HFColor SetColor
    show
   grestore
   0 HFLineHeight neg rmoveto
  }forall
}def

% right-lines left-lines /start lineheight pad fore-color HeaderOrFooterText
/HeaderOrFooterText{
  /HFColor exch def
  /HFPad exch def
  /HFLineHeight exch def
  /HFStart exch load def

  % -- rightLines leftLines -- at stack

  % ---- hack: `PN 1 and'  ==  `PN 2 modulo'
  % ---- if even page number and duplex, then exchange left and right
  PageNumber 1 and 0 eq SwitchHeader and{exch}if

  % ---- process the left lines
  false HeaderOrFooterTextLines

  % ---- process the right lines
  true HeaderOrFooterTextLines
}def

/HeaderText{
  gsave HeaderClip
  HeaderLinesRight HeaderLinesLeft
  /HeaderStart HeaderLineHeight HeaderPad
  HeaderFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/FooterText{
  gsave FooterClip
  FooterLinesRight FooterLinesLeft
  /FooterStart FooterLineHeight FooterPad
  FooterFrameProperties 0 get
  HeaderOrFooterText
  grestore
}def

/ReportFontInfo{
  2 copy
  /t0 3 1 roll DefFont
  /t0 F
  /lh FontHeight def
  /sw( )stringwidth pop def
  /aw(01234567890abcdefghijklmnopqrstuvwxyz)dup length exch
  stringwidth pop exch div def
  /t1 12/Helvetica-Oblique DefFont
  /t1 F
  gsave
    (languagelevel = )show
    languagelevel 32 string cvs show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (For )show
    128 string cvs show
    ( )show
    32 string cvs show
    ( point, the line height is )show
    lh 32 string cvs show
    (, the space width is )show
    sw 32 string cvs show
    (,)show
  grestore
  0 FontHeight neg rmoveto
  gsave
    (and a crude estimate of average character width is )show
    aw 32 string cvs show
    (.)show
  grestore
  0 FontHeight neg rmoveto
}def

% cm to point
/cm{72 mul 2.54 div}def

/ReportAllFontInfo{
  % key = font name   value = font dictionary
  FontDirectory{pop 10 exch ReportFontInfo}forall
}def

% 3 cm 20 cm moveto  10/Courier ReportFontInfo  showpage
% 3 cm 20 cm moveto  ReportAllFontInfo          showpage

% === END ps-print prologue 1

/printGlobalBackground{
}def
/printLocalBackground{
}def

%%EndProlog

%%BeginSetup

%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-BoldOblique
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
/h0 14(Helvetica-Bold)cvn DefFont
/h1 12(Helvetica)cvn DefFont
/L0 6(Times-Italic)cvn DefFont
/H0 12(Helvetica)cvn DefFont


% ---- These lines must be kept together because...

/h0 F
/HeaderTitleLineHeight FontHeight def

/h1 F
/HeaderLineHeight FontHeight def
/HeaderDescent    Descent def

/H0 F
/FooterLineHeight FontHeight def
/FooterDescent    Descent def

% ---- ...because `F' has a side-effect on `FontHeight' and `Descent'

/f0 8.5(Courier)cvn DefFont
/f1 8.5(Courier-Bold)cvn DefFont
/f2 8.5(Courier-Oblique)cvn DefFont
/f3 8.5(Courier-BoldOblique)cvn DefFont
/SpaceWidthRatio 0.600000 def

%%BeginFeature: *ManualFeed False
BMark /ManualFeed false EMark setpagedevice
%%EndFeature

%%%% Start of Mule Section

/Latin1Encoding {	% newname fontname  |  font
    findfont dup length dict begin
	{ 1 index /FID ne { def } { pop pop } ifelse } forall
        /Encoding ISOLatin1Encoding def
	currentdict
    end
    definefont
} bind def

%% Redefine fonts for multiple charsets.
/ReDefFont {		     % fontname encoding fdepvector size  |  -
  20 dict begin
  3 index findfont {
    1 index /FID ne 2 index /UniqueID ne and {def} {pop pop} ifelse
  } forall
  /FontType 0 def
  /FMapType 3 def
  /EscChar 0 def
  % FontMatrix ::= [ size 0 0 size 0 0 ]
  /FontMatrix exch [ exch dup 0 exch 0 exch 0 0 ] def
  /FDepVector exch def
  /Encoding exch def
  currentdict
  end			% fontname dic
  definefont pop
} bind def

/EscChar 0 def

%% End of Mule Section

/F00 /Courier findfont def
/ETOP0 256 array def
0 1 255 { ETOP0 exch 0 put } for
ETOP0 0 0 put
/VTOP0 [F00] def
/ETOP1 256 array def
0 1 255 { ETOP1 exch 0 put } for
ETOP1 0 0 put
/VTOP1 [F00] def
/ETOP2 256 array def
0 1 255 { ETOP2 exch 0 put } for
ETOP2 0 0 put
/VTOP2 [F00] def
/ETOP3 256 array def
0 1 255 { ETOP3 exch 0 put } for
ETOP3 0 0 put
/VTOP3 [F00] def
/Vh0 [ VTOP1 aload pop ] def

Vh0 0 /Helvetica-Bold-latin1 /Helvetica-Bold Latin1Encoding put
/h0 ETOP1 Vh0 14.000000 ReDefFont
/Vh1 [ VTOP0 aload pop ] def

Vh1 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/h1 ETOP0 Vh1 12.000000 ReDefFont
/VH0 [ VTOP0 aload pop ] def

VH0 0 /Helvetica-latin1 /Helvetica Latin1Encoding put
/H0 ETOP0 VH0 12.000000 ReDefFont
/Vf0 [ VTOP0 aload pop ] def

Vf0 0 /Courier-latin1 /Courier Latin1Encoding put
/f0 ETOP0 Vf0 8.500000 ReDefFont
/Vf1 [ VTOP1 aload pop ] def

Vf1 0 /Courier-Bold-latin1 /Courier-Bold Latin1Encoding put
/f1 ETOP1 Vf1 8.500000 ReDefFont
/Vf2 [ VTOP2 aload pop ] def

Vf2 0 /Courier-Oblique-latin1 /Courier-Oblique Latin1Encoding put
/f2 ETOP2 Vf2 8.500000 ReDefFont
/Vf3 [ VTOP3 aload pop ] def

Vf3 0 /Courier-BoldOblique-latin1 /Courier-BoldOblique Latin1Encoding put
/f3 ETOP3 Vf3 8.500000 ReDefFont
BeginDoc
%%EndSetup

%%Page: 1 1
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 1 def
/PageNumber 1 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
0 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
0.282 0.239 0.545 FG
(#define) S
0.000 0.000 0.000 FG
( ) S
0.000 0.000 0.804 FG
(DEBUG) S
0.000 0.000 0.000 FG
LHL
/f1 F
0.804 0.000 0.000 FG
(Module) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_comp_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
(  ) S
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
LHL
/f0 F
(!) S
/f2 F
LHL
/f0 F
(! ) S
/f2 F
(!MODULE: iac_comp_mod) S
LHL
/f0 F
(!) S
/f2 F
LHL
/f0 F
(!  ) S
/f2 F
(Interface of the integrated assessment component in CCSM) S
LHL
/f0 F
(!) S
/f2 F
LHL
/f0 F
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(!) S
/f2 F
LHL
/f0 F
(! ) S
/f2 F
(!USES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_comp_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm_comp_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac2gcam_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2glm_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2emisfile_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm2iac_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_fields_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_cal_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_file_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_mod) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_kind_mod) S
/f0 F
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(only) S
/f0 F
0.000 0.000 0.000 FG
( : r8 => shr_kind_r8,r4 => shr_kind_r4) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(netcdf) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(SAVE) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(private) S
/f0 F
0.000 0.000 0.000 FG
(                              ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(By default make data private) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!PUBLIC MEMBER FUNCTIONS:) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(public) S
/f0 F
0.000 0.000 0.000 FG
( :: iac_init_mod               ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(clm initialization) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(public) S
/f0 F
0.000 0.000 0.000 FG
( :: iac_run_mod                ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(clm run phase) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(public) S
/f0 F
0.000 0.000 0.000 FG
( :: iac_final_mod              ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(clm finalization/cleanup) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!PUBLIC DATA MEMBERS: None) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!PRIVATE DATA MEMBERS:) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcami\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcamiold\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcamiinterp\(:,:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcamiptr\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcamo\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcamoemis\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( co2gcam2005base\(:,:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( glmi\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( glmi_wh\(:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( glmo\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(save) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iulog) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(save) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iacymd_fudge = -1) S
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( clmC_bfn_dir = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( clm2gcam_mapfile = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( iac_base_clmfile = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2glm_basecrop = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2glm_basepast = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2glm_baseothr = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2glm_aezmap = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2glm_basebiomass = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_co2base2000 = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_co2shipbase2000 = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_grid720x360 = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_grid288x192 = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_lut720x360map = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_downscaleinfo = 'unknown') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=512\) ::) S
0.000 0.000 0.804 FG
( gcam2emisfile_rcp45allsteps = 'unknown') S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 2 2
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 73 def
/PageNumber 2 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
72 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iac_restfile = 'iac_restart.') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iac_rpointer = 'rpointer.iac') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(256\) ::) S
0.000 0.000 0.804 FG
( rstfilename) S
0.000 0.000 0.000 FG
PHL
(  ) S
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( fast_oneway_iac_coupling = .false.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( clm_iac_carbon_scaling = .true.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( sneakermode = .false.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( co2flux_coupling = .false.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( npp_hr_on = .false.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( initial_run = .true.) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( clm_nx, clm_ny = -1) S
0.000 0.000 0.000 FG
LHL
(  ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( long_gcam_timestep) S
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(namelist) S
/f0 F
0.000 0.000 0.000 FG
( /) S
0.000 0.545 0.545 FG
(iacnml) S
0.000 0.000 0.000 FG
(/   ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       fast_oneway_iac_coupling,sneakermode,npp_hr_on,initial_run, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       clm2gcam_mapfile, iac_base_clmfile, clm_nx, clm_ny, clmC_bfn_dir, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       gcam2glm_basecrop,gcam2glm_basepast,gcam2glm_baseothr,gcam2glm_aezmap, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       gcam2glm_basebiomass,clm_iac_carbon_scaling,co2flux_coupling,gcam2emisfile_co2base2000, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       gcam2emisfile_grid720x360,gcam2emisfile_grid288x192,gcam2emisfile_co2shipbase2000, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       gcam2emisfile_lut720x360map,gcam2emisfile_downscaleinfo,gcam2emisfile_rcp45allsteps) S
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
LHL
/f0 F
(!) S
/f2 F
(===============================================================) S
LHL
/f1 F
0.804 0.000 0.000 FG
(contains) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(===============================================================) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: iac_init_mod) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_init_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( EClock, cdata, iaci, iaco\)) S
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(! ) S
/f2 F
(Initialize interface for iac) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!USES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( EClock\(:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(type\(iac_cdata_type\)) S
/f0 F
0.000 0.000 0.000 FG
( :: ) S
0.000 0.000 0.804 FG
(cdata) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iaci\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iaco\(:,:\)) S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!LOCAL VARIABLES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( subname='\(iac_init_mod\)') S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( ymdtest,iacymd,iactod,run_up_date,ncid) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( gcam_data_size) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( glm_data_size) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iac_data_size) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( nunit, ier,varid) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iacymd_hold) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( lexist) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=128\) ::) S
0.000 0.000 0.804 FG
( casename) S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
LHL
/f0 F
(!) S
/f2 F
(-----------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  nunit = shr_file_getUnit\(\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(open) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit,file=) S
0.000 0.545 0.000 FG
("iac_in") S
0.000 0.000 0.000 FG
(,status=) S
0.000 0.545 0.000 FG
("old") S
0.000 0.000 0.000 FG
(,action=) S
0.000 0.545 0.000 FG
("read") S
0.000 0.000 0.000 FG
(\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(read) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit, iacnml, iostat=ier\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(ier /= 0\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\)) S
0.000 0.545 0.000 FG
('error: iacnml namelist input resulted in error code ') S
0.000 0.000 0.000 FG
(,ier) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_abort) S
/f0 F
0.000 0.000 0.000 FG
(\(subname//) S
0.000 0.545 0.000 FG
(' ERROR: iacnml error') S
0.000 0.000 0.000 FG
(\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(close) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_file_freeUnit) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit\)) S
PHL
EndPage
EndDSCPage
EndSheet

%%Page: 3 3
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 145 def
/PageNumber 3 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
144 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  iulog = cdata%i\(iac_cdatai_logunit\)) S
LHL
(  cdata%l\(iac_cdatal_fastiac\) = fast_oneway_iac_coupling) S
LHL
(  cdata%l\(iac_cdatal_sneakermode\) = sneakermode) S
LHL
(  cdata%l\(iac_cdatal_co2flux_coupling\) = co2flux_coupling) S
LHL
(  cdata%l\(iac_cdatal_npphr\)   = npp_hr_on) S
LHL
(  cdata%l\(iac_cdatal_nocarbonscale\)   = clm_iac_carbon_scaling) S
LHL
(  cdata%l\(iac_cdatal_initrun\) = initial_run) S
LHL
(  cdata%c\(iac_cdatac_clmcbfndir\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(clmC_bfn_dir\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2glm_basecrop\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2glm_basecrop\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2glm_basepast\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2glm_basepast\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2glm_baseothr\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2glm_baseothr\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2glm_aezmap\)   = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2glm_aezmap\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2glm_basebiomass\)  = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2glm_basebiomass\)) S
LHL
(  cdata%c\(iac_cdatac_clm2gcam\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(clm2gcam_mapfile\)) S
LHL
(  cdata%c\(iac_cdatac_ibclmfile\) = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_base_clmfile\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_co2base2000\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_co2base2000\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_co2shipbase2000\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_co2shipbase2000\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_grid720x360\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_grid720x360\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_grid288x192\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_grid288x192\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_lut720x360map\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_lut720x360map\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_downscaleinfo\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_downscaleinfo\)) S
LHL
(  cdata%c\(iac_cdatac_gcam2emisfile_rcp45allsteps\)=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(gcam2emisfile_rcp45allsteps\)) S
PHL
LHL
(  cdata%i\(iac_cdatai_iac_nx\)  = clm_nx) S
LHL
(  cdata%i\(iac_cdatai_iac_ny\)  = clm_ny) S
LHL
(  cdata%i\(iac_cdatai_iac_size\) = clm_nx * clm_ny) S
LHL
(  casename = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(cdata%c\(iac_cdatac_casename\)\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' iacnml settings:') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' clm_nx    = ') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_iac_nx\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' clm_ny    = ') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_iac_ny\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' fastiac   = ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_fastiac\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' sneakermode= ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_sneakermode\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' co2flux_coupling= ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_co2flux_coupling\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' clm->iac carbon scaling = ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_nocarbonscale\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' npphr     = ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_npphr\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' initrun   = ') S
0.000 0.000 0.000 FG
(,cdata%l\(iac_cdatal_initrun\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' clm2gcam  = ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(cdata%c\(iac_cdatac_clm2gcam\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' clmC_bfn_dir = ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(cdata%c\(iac_cdatac_clmcbfndir\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' ibclmfile = ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(cdata%c\(iac_cdatac_ibclmfile\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2glm_basecrop = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2glm_basecrop\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2glm_basepast = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2glm_basepast\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2glm_baseothr = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2glm_baseothr\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_co2base2000 = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_co2base) S
SL
(2000\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_co2shipbase2000 = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_co2) S
SL
(shipbase2000\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_grid720x360 = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_grid720) S
SL
(x360\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_grid288x192 = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_grid288) S
SL
(x192\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_lut720x360map = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_lut72) S
SL
(0x360map\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_downscaleinfo = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_downs) S
SL
(caleinfo\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2emisfile_rcp45allsteps = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2emisfile_rcp45) S
SL
(allsteps\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2glm_aezmap = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2glm_aezmap\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' gcam2glm_basebiomass = ') S
0.000 0.000 0.000 FG
(,cdata%c\(iac_cdatac_gcam2glm_basebiomass\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_fields_init) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  iac_data_size = cdata%i\(iac_cdatai_iac_size\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(iaci\(iac_iaci_nflds,iac_data_size\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(iaco\(iac_iaco_nflds,iac_data_size\)\)) S
LHL
(  iaci = iac_spval) S
LHL
(  iaco = iac_spval) S
LHL
(  cdata%l\(iac_cdatal_iac_present\) = ) S
/f1 F
0.804 0.000 0.000 FG
(.true.) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  cdata%l\(iac_cdatal_iac_prognostic\) = ) S
/f1 F
0.804 0.000 0.000 FG
(.true.) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(sneakermode\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     long_gcam_timestep=15) S
EndPage
EndDSCPage
EndSheet

%%Page: 4 4
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 210 def
/PageNumber 4 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
216 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     long_gcam_timestep=5) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- initialize models ---) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_init_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcami, gcamo, gcamoemis  \)) S
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- Initialize gcam2emisfile and run up to current date) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(co2flux_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2emisfile_init_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( EClock, cdata, gcamoemis\)) S
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(allocate arrays to interpolate the gcami data) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp\(iac_gcami_nflds,cdata%i\(iac_cdatai_gcami_size\),long_gcam_timestep\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\(iac_gcami_nflds,cdata%i\(iac_cdatai_gcami_size\)\)\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm_init_mod) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock, cdata, glmi , glmi_wh, glmo \)) S
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- initialize couplers ---) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac2gcam_init_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, iaci, gcami\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2glm_init_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcamo, glmi, glmi_wh \)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm2iac_init_mod) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock, cdata, glmo,  iaco\)) S
PHL
LHL
(  gcam_data_size = ) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamo,2\)) S
LHL
(  glm_data_size = ) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmi,2\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
(' case name  = ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(casename\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
(' iac size   = ') S
0.000 0.000 0.000 FG
(,iac_data_size) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
(' gcamo size = ') S
0.000 0.000 0.000 FG
(,gcam_data_size) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
(' glm size   = ') S
0.000 0.000 0.000 FG
(,glm_data_size) S
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- Run GCAM up to current date and initialize gcam2glm with starting data ---) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  iacymd = EClock\(iac_EClock_ymd\)) S
LHL
(  iactod = EClock\(iac_Eclock_tod\)) S
LHL
(  iacymd_hold=iacymd) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(initial_run\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     gcamiold=iac_spval) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(write_iac_restart) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer,iac_restfile,iacymd,) S
0.000 0.545 0.000 FG
('gcami') S
0.000 0.000 0.000 FG
(,gcamiold\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(read restart and set gcamiold) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(inquire) S
/f0 F
0.000 0.000 0.000 FG
(\(file=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer\),exist=lexist\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(lexist\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
PHL
(        ) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' read_restart rpointer ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(        nunit = shr_file_getunit\(\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(open) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit,file=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer\),form=) S
0.000 0.545 0.000 FG
('formatted') S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(read) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit,) S
0.000 0.545 0.000 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) rstfilename) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(close) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_file_freeunit) S
/f0 F
0.000 0.000 0.000 FG
(\(nunit\)) S
PHL
(        ) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' read_restart file ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rstfilename\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
PHL
(        ) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(inquire) S
/f0 F
0.000 0.000 0.000 FG
(\(file=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rstfilename\),exist=lexist\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \() S
/f1 F
0.804 0.000 0.000 FG
(.not.) S
/f0 F
0.000 0.000 0.000 FG
(lexist\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' ERROR: missing file ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rstfilename\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_abort) S
/f0 F
0.000 0.000 0.000 FG
(\(subname//) S
0.000 0.545 0.000 FG
(' ERROR: missing file') S
0.000 0.000 0.000 FG
(\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 5 5
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 282 def
/PageNumber 5 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
288 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(        ) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_open\(rstfilename,nf90_nowrite,ncid\),subname,__LINE__\)) S
PHL
(        ) S
LHL
(        ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Need to save off gcami carbon scalar data) S
PHL
/f0 F
0.000 0.000 0.000 FG
(        ) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,) S
0.000 0.545 0.000 FG
('gcami') S
0.000 0.000 0.000 FG
(,varid\),subname,__LINE__\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_get_var\(ncid,varid,gcamiold\),subname,__LINE__\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,) S
0.000 0.545 0.000 FG
('ymd') S
0.000 0.000 0.000 FG
(,varid\),subname,__LINE__\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_get_var\(ncid,varid,iacymd_fudge\),subname,__LINE__\)) S
PHL
(        ) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(fast_oneway_iac_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
( ) S
LHL
(           iacymd=iacymd_fudge) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_close\(ncid\),subname//) S
0.000 0.545 0.000 FG
(':close') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
PHL
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' read_restart rpointer NOT found ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_abort) S
/f0 F
0.000 0.000 0.000 FG
(\(subname//) S
0.000 0.545 0.000 FG
(' ERROR: missing file') S
0.000 0.000 0.000 FG
(\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
( ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(rpointer exist) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
( ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(initial_run) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  run_up_date=iacymd) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \() S
/f1 F
0.804 0.000 0.000 FG
(.not.) S
/f0 F
0.000 0.000 0.000 FG
(initial_run\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     run_up_date=iacymd+long_gcam_timestep*10000) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\)) S
0.000 0.545 0.000 FG
('running gcam up to date ') S
0.000 0.000 0.000 FG
(,run_up_date) S
LHL
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(during runup turn off gcam restart writes for efficiency) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  cdata%l\(iac_cdatal_write_rest\) = ) S
/f1 F
0.804 0.000 0.000 FG
(.false.) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( ymdtest=19750101,run_up_date,50000) S
LHL
(     EClock\(iac_EClock_ymd\) = ymdtest) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcami, gcamo, gcamoemis\)) S
LHL
0.000 0.000 0.804 FG
(!    ) S
/f2 F
(Running emissions ) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(ymdtest) S
/f1 F
0.804 0.000 0.000 FG
(.ge.) S
/f0 F
0.000 0.000 0.000 FG
(20000101) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
(co2flux_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2emisfile_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( EClock, cdata, gcamoemis\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(after runup turn gcam restart back on ) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  cdata%l\(iac_cdatal_write_rest\) = ) S
/f1 F
0.804 0.000 0.000 FG
(.true.) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(fast_oneway_iac_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd=iacymd_hold) S
LHL
(     EClock\(iac_EClock_ymd\) = iacymd) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_init_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: iac_run_mod) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( EClock, cdata, iaci, iaco\)) S
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(! ) S
/f2 F
(Run interface for iac) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!USES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( EClock\(:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(type\(iac_cdata_type\)) S
/f0 F
0.000 0.000 0.000 FG
( :: ) S
0.000 0.000 0.804 FG
(cdata) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iaci\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( iaco\(:,:\)) S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!LOCAL VARIABLES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( i,j,ij,h,k,iu,nx,ny,ifld,ji,jr,num) S
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 6 6
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 354 def
/PageNumber 6 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
360 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( ymdtest,iacymd,iactod,iacymd_orig,iactod_orig,iacymd_hold) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( yyyy,mm,dd,yyyym1,gcamiinterpyr\(15\),dum1,dum2,iyr) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=128\) ::) S
0.000 0.000 0.804 FG
( hfile,vname,string,filename) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( ncid,dimid,varid,nmode,n,ierr) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( dimidiac\(2\),dimidgcamo\(3\),dimidgcami\(2\),dimidglm\(2\),dimidglmiwh\(2\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( start3\(3\),count3\(3\),start\(1\),count\(1\),datearr\(12\),yeararr\(12\),mtharr\(12\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( ncidco2,londimid,latdimid,timedimid,numco2lat,numco2lon,numtime,startyr,endyr,ind,) S
SL
(yr,mth,startday,endday,calday) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(allocatable) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( array3\(:,:,:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(allocatable) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( array2\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(allocatable) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( arin\(:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8  ::) S
0.000 0.000 0.804 FG
( fact1,fact2) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( subname='\(iac_run_mod\)') S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=128\) ::) S
0.000 0.000 0.804 FG
( casename) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( fast_oneway_iac_coupling) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( glmyear=14990101) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( day,naez,nreg,ncrop,nfld,rungcam2emisfile) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(logical) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( datagcam) S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
LHL
/f0 F
(!) S
/f2 F
(-----------------------------------------------------------------------) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  datagcam=) S
/f1 F
0.804 0.000 0.000 FG
(.false.) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  iulog = cdata%i\(iac_cdatai_logunit\)) S
LHL
(  fast_oneway_iac_coupling = cdata%l\(iac_cdatal_fastiac\)) S
LHL
(  casename = ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(cdata%c\(iac_cdatac_casename\)\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(fast_oneway_iac_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(save original ymd/tod value) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     iacymd_orig = EClock\(iac_EClock_ymd\)) S
LHL
(     iactod_orig = EClock\(iac_Eclock_tod\)) S
PHL
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('current model ymd =') S
0.000 0.000 0.000 FG
(,iacymd_orig,) S
0.000 0.545 0.000 FG
(' tod =') S
0.000 0.000 0.000 FG
(,iactod_orig) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- reset iac ymd Clock) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(iacymd_fudge < 0\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        iacymd_fudge = 20050101) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        iacymd_fudge = iacymd_fudge + 100) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \() S
/f1 F
0.804 0.000 0.000 FG
(mod) S
/f0 F
0.000 0.000 0.000 FG
(\(iacymd_fudge,10000\) > 1231\) iacymd_fudge = \(iacymd_fudge/10000+1\)*10000 + 0101) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_fudge) S
LHL
(     EClock\(iac_Eclock_tod\) = EClock\(iac_Eclock_dt\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(iac time) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  iacymd = EClock\(iac_EClock_ymd\)) S
LHL
(  iactod = EClock\(iac_Eclock_tod\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_cal_date2ymd) S
/f0 F
0.000 0.000 0.000 FG
(\(iacymd,yyyy,mm,dd\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(yyyy) S
/f1 F
0.804 0.000 0.000 FG
(.eq.) S
/f0 F
0.000 0.000 0.000 FG
(2096) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
(mm) S
/f1 F
0.804 0.000 0.000 FG
(.eq.) S
/f0 F
0.000 0.000 0.000 FG
(01\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_abort) S
/f0 F
0.000 0.000 0.000 FG
(\(subname//) S
0.000 0.545 0.000 FG
(' ERROR: IESM is not designed to operate past 2095') S
0.000 0.000 0.000 FG
(\)) S
PHL
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(compute "alarms" 0 = off, 1 = on) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  EClock\(iac_EClock_Agcam\) = 0) S
LHL
(  EClock\(iac_EClock_Aglm\)  = 0) S
LHL
(  EClock\(iac_EClock_AclmC\) = 0) S
LHL
(  EClock\(iac_EClock_Agcamsetden\) = 0) S
LHL
(  rungcam2emisfile=0) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(iactod == EClock\(iac_EClock_dt\)\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
(   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(first timestep of day) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(dd==1\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(          EClock\(iac_EClock_AclmC\) = 1   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(every month) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(dd==1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( mm==1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        EClock\(iac_EClock_Aglm\)  = 1   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(every year) S
LHL
/f0 F
0.000 0.000 0.000 FG
(        EClock\(iac_EClock_Agcam\) = 1   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(every year) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 7 7
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 425 def
/PageNumber 7 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
432 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
(\(dd==1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( mm==1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( yyyy>2005 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f1 F
0.804 0.000 0.000 FG
(mod) S
/f0 F
0.000 0.000 0.000 FG
(\(yyyy-2005,long_gcam_timestep\)==0\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(          EClock\(iac_EClock_Agcamsetden\) = 1   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(every long_gcam_timestep year) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
(\(dd==1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( mm==1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( yyyy>=2005 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f1 F
0.804 0.000 0.000 FG
(mod) S
/f0 F
0.000 0.000 0.000 FG
(\(yyyy-2005,long_gcam_timestep\)==0\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(          rungcam2emisfile = 1   ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(every long_gcam_timestep year) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('current model date1 ') S
0.000 0.000 0.000 FG
(,iacymd,iactod) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('current model date2 ') S
0.000 0.000 0.000 FG
(,yyyy,mm,dd) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('current model alarm ') S
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(          EClock\(iac_Eclock_Agcam\),EClock\(iac_Eclock_Aglm\),EClock\(iac_Eclock_AclmC\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_AclmC\) == 1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(      ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling iac2gcam_run') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac_ECloc) S
SL
(k_tod\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_sys_flush) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac2gcam_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock,cdata,iaci,gcami\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\() S
0.000 0.545 0.000 FG
(' gcami: ') S
0.000 0.000 0.000 FG
(,gcami\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Agcamsetden\) == 1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(First time through gcamiold is set to iac_spval ) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(initialize gcamiold) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \() S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\)) S
/f1 F
0.804 0.000 0.000 FG
(.lt.) S
/f0 F
0.000 0.000 0.000 FG
(0.9*iac_spval\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        gcamiold=1.) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('initializing gcamiold to 1.') S
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('gcamiold max/min/sum=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(su) S
SL
(m) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(if clm sets a previously good point to 0 \(pft disappears\)) S
LHL
/f0 F
0.000 0.000 0.000 FG
(        ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(hold scaling constant.) S
LHL
/f0 F
0.000 0.000 0.000 FG
(        ) S
/f1 F
0.804 0.000 0.000 FG
(where) S
/f0 F
0.000 0.000 0.000 FG
( \(gcami) S
/f1 F
0.804 0.000 0.000 FG
(.eq.) S
/f0 F
0.000 0.000 0.000 FG
(0. ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( gcamiold) S
/f1 F
0.804 0.000 0.000 FG
(.gt.) S
/f0 F
0.000 0.000 0.000 FG
(0.\)) S
LHL
(           gcami=gcamiold) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(end where) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
(     ) S
LHL
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(we have averaged clm scalers for each gcam timestep \(5 years\) ) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(and will use consecutive averages to interpolate all interrim years thus smoothing) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(the clm carbon scaler data. Initial scalars for first interpolation are 1.) S
PHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,long_gcam_timestep) S
LHL
(        EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\)+10000) S
LHL
(        fact1=) S
/f1 F
0.804 0.000 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(\(long_gcam_timestep-i\)/) S
/f1 F
0.804 0.000 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(\(long_gcam_timestep\)) S
LHL
(        fact2=) S
/f1 F
0.804 0.000 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(\(i\)/) S
/f1 F
0.804 0.000 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(\(long_gcam_timestep\)) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('setting gcam density for gcam year') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),) S
SL
(EClock\(iac_EClock_tod\),fact1) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_cal_date2ymd) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock\(iac_EClock_ymd\),gcamiinterpyr\(i\),dum1,dum2\)) S
LHL
(        ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(only interp gcami for non missing data, trap 0s and missing) S
LHL
/f0 F
0.000 0.000 0.000 FG
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('figuring gcamiinterp gcami max/min=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcami\),) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(g) S
SL
(cami\),) S
/f1 F
0.804 0.000 0.000 FG
(sum) S
/f0 F
0.000 0.000 0.000 FG
(\(gcami\),fact1,fact2) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('gcamiold max/min/sum=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(su) S
SL
(m) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('gcamiinterp sum old=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(sum) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(where) S
/f0 F
0.000 0.000 0.000 FG
( \(gcami) S
/f1 F
0.804 0.000 0.000 FG
(.gt.) S
/f0 F
0.000 0.000 0.000 FG
(0.\)) S
LHL
(           gcamiinterp\(:,:,i\)=fact1*gcamiold\(:,:\)+fact2*gcami\(:,:\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(elsewhere) S
/f0 F
0.000 0.000 0.000 FG
LHL
(           gcamiinterp\(:,:,i\)=iac_spval) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(end where) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(clm_iac_carbon_scaling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('gcamiinterp sum new=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(sum) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp\)) S
LHL
11 W
(gcamiptr=>gcamiinterp\(:,:,i\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_setdensity_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcamiptr\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(end do) S
/f0 F
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 8 8
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 492 def
/PageNumber 8 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
504 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(     gcamiold=gcami) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('new gcamiold max/min/sum=') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\),) S
/f1 F
0.804 0.000 0.000 FG
(s) S
SL
(um) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(write the iac restart pointer that contains the current date and gcamiold values for restart) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(the date is read off of this file to allow the fast mode restarts at the fudged date.) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(write every timestep for fastmode or every time gcamiold is changed) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Agcamsetden\) == 1 ) S
/f1 F
0.804 0.000 0.000 FG
(.or.) S
/f0 F
0.000 0.000 0.000 FG
( fast_oneway_iac_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(write_iac_restart) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_rpointer,iac_restfile,EClock\(iac_Eclock_ymd\),) S
0.000 0.545 0.000 FG
('gcami') S
0.000 0.000 0.000 FG
(,gcamiold\)) S
PHL
(     ) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Agcam\) == 1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Simulate the long_gcam_timestep by calling gcam_run_mod one or more times) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(advancing the model year by 5 years \(gcams real timestep\) each time) S
LHL
/f0 F
0.000 0.000 0.000 FG
(     EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\) + 50000) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling gcam_run_mod ') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac_ECloc) S
SL
(k_tod\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcami, gcamo, gcamoemis\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\() S
0.000 0.545 0.000 FG
(' gcamo: ') S
0.000 0.000 0.000 FG
(,gcamo\)) S
PHL
(     ) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(sneakermode) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
(EClock\(iac_EClock_Agcamsetden\)\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
( ) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,long_gcam_timestep/5 - 1) S
LHL
(           ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Simulate the long_gcam_timestep by calling gcam_run_mod one or more times) S
LHL
/f0 F
0.000 0.000 0.000 FG
(           ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(advancing the model year by 5 years \(gcams real timestep\) each time) S
LHL
/f0 F
0.000 0.000 0.000 FG
(           EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\) + 50000) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling gcam_run_mod ') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac) S
SL
(_EClock_tod\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcami, gcamo, gcamoemis\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\() S
0.000 0.545 0.000 FG
(' gcamo: ') S
0.000 0.000 0.000 FG
(,gcamo\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(end do) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
LHL
/f0 F
(! ) S
/f2 F
(After GCAM has completed full 5/15 year timestep write CO2 emissions to CO2 flux file) S
LHL
/f0 F
(!     ) S
/f2 F
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(rungcam2emisfile == 1) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
(co2flux_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\) + 50000) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2emisfile_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( EClock, cdata, gcamoemis\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Aglm\) == 1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\) + 10000) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(      ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling gcam2glm_run') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac_ECloc) S
SL
(k_tod\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam2glm_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, gcamo, glmi, glmi_wh\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\() S
0.000 0.545 0.000 FG
(' glmi: ') S
0.000 0.000 0.000 FG
(,glmi\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,) S
0.000 0.545 0.000 FG
('\(2a,i3,2f13.6\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('\(iac_diag\)') S
0.000 0.000 0.000 FG
(//) S
0.000 0.545 0.000 FG
(' ') S
0.000 0.000 0.000 FG
(,) S
0.000 0.545 0.000 FG
(' glmi_wh:') S
0.000 0.000 0.000 FG
(,1, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(glmi_wh\(:\)\),) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(glmi_wh\(:\)\)) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(      ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling glm_run') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac_EClock_tod) S
SL
(\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm_run_mod) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock, cdata, glmi, glmi_wh, glmo \)) S
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Need to reverse glmo order, north->south, east->west to south->north, east->west) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(use array2 as temporary) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\() S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmo,dim=1\),) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmo,dim=2\)\)\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 9 9
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 559 def
/PageNumber 9 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
576 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  array2 = glmo) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,iac_glm_ny) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,iac_glm_nx) S
LHL
(    ji = \(j-1\)*iac_glm_nx + i) S
LHL
(    jr = \(iac_glm_ny - j\)*iac_glm_nx + i) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( k = 1,iac_glmo_nflds) S
LHL
(      glmo\(k,ji\) = array2\(k,jr\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\)) S
PHL
PHL
LHL
(  ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(--- tcx end fill) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Aglm\) == 1\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = EClock\(iac_Eclock_ymd\) + 10000) S
LHL
0.282 0.239 0.545 FG
(#ifdef) S
0.000 0.000 0.000 FG
( DEBUG) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
('calling glm2iac_run') S
0.000 0.000 0.000 FG
(,EClock\(iac_EClock_ymd\),EClock\(iac_EClo) S
SL
(ck_tod\)) S
LHL
0.282 0.239 0.545 FG
(#endif) S
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\() S
0.000 0.545 0.000 FG
(' glmo: ') S
0.000 0.000 0.000 FG
(,glmo\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm2iac_run_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(EClock, cdata, glmo, iaco\)) S
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(-------- history file ---------------------------------------------------) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(hfile,) S
0.000 0.545 0.000 FG
('\(a,i4.4,a,i2.2,a,i2.2,a,i5.5,a\)') S
0.000 0.000 0.000 FG
(\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(casename\)//) S
0.000 0.545 0.000 FG
('.iac.hi.') S
0.000 0.000 0.000 FG
(,yyyy,) S
0.000 0.545 0.000 FG
('-') S
0.000 0.000 0.000 FG
(,mm,) S
0.000 0.545 0.000 FG
('-') S
0.000 0.000 0.000 FG
(,dd,) S
0.000 0.545 0.000 FG
('-) S
SL
(') S
0.000 0.000 0.000 FG
(,iactod,) S
0.000 0.545 0.000 FG
('.nc') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\),) S
0.000 0.545 0.000 FG
(' writing history file ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(hfile\)) S
PHL
LHL
(  nmode = ) S
/f1 F
0.804 0.000 0.000 FG
(ior) S
/f0 F
0.000 0.000 0.000 FG
(\(NF90_CLOBBER,NF90_64BIT_OFFSET\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_create\() S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(hfile\),nmode,ncid\),subname//) S
0.000 0.545 0.000 FG
('create') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_att\(ncid,NF90_GLOBAL,) S
0.000 0.545 0.000 FG
('missing_value') S
0.000 0.000 0.000 FG
(,iac_spval\),subname//) S
0.000 0.545 0.000 FG
('putatt_missva) S
SL
(l') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('iac_nx') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_iac_nx\) ,dimid\),subname//) S
0.000 0.545 0.000 FG
('defdim_) S
SL
(iacnx') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  dimidiac\(1\) = dimid) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('iac_ny') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_iac_ny\) ,dimidiac\(2\)\),subname//) S
0.000 0.545 0.000 FG
('d) S
SL
(efdim_iacny') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('gcami_nreg') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_gcam_nreg\),dimidgcami\(2\)\),subn) S
SL
(ame//) S
0.000 0.545 0.000 FG
('defdim_gcaminreg') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('gcami_naez') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_gcam_naez\),dimidgcami\(1\)\),subn) S
SL
(ame//) S
0.000 0.545 0.000 FG
('defdim_gcaminaez') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('gcamo_ntime') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_gcamo_ntime\),dimidgcamo\(3\)\),s) S
SL
(ubname//) S
0.000 0.545 0.000 FG
('defdim_gcamontime') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('gcamo_nreg') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_gcam_nreg\),dimidgcamo\(2\)\),subn) S
SL
(ame//) S
0.000 0.545 0.000 FG
('defdim_gcamonreg') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('gcamo_naez') S
0.000 0.000 0.000 FG
(,cdata%i\(iac_cdatai_gcam_naez\),dimidgcamo\(1\)\),subn) S
SL
(ame//) S
0.000 0.545 0.000 FG
('defdim_gcamonaez') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('glm_nx') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_glm_nx\) ,dimidglm\(1\)\),subname//) S
0.000 0.545 0.000 FG
('d) S
SL
(efdim_glmnx') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('glm_ny') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_glm_ny\) ,dimidglm\(2\)\),subname//) S
0.000 0.545 0.000 FG
('d) S
SL
(efdim_glmny') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('glmiwh_nreg') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_gcam_nreg\) ,dimidglmiwh\(2\)\),) S
SL
(subname//) S
0.000 0.545 0.000 FG
('defdim_glminreg') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('glmiwh_naez') S
0.000 0.000 0.000 FG
( ,cdata%i\(iac_cdatai_gcam_naez\) ,dimidglmiwh\(1\)\),) S
SL
(subname//) S
0.000 0.545 0.000 FG
('defdim_glminaez') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
PHL
LHL
0.000 0.000 0.804 FG
(!  ) S
/f2 F
(do n = 1,size\(iaci,dim=1\)) S
LHL
/f0 F
(!     ) S
/f2 F
(write\(vname,'\(a,i2.2\)'\) 'iaci',n) S
LHL
/f0 F
(!     ) S
/f2 F
(ierr = nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidiac,varid\)) S
LHL
/f0 F
(!     ) S
/f2 F
(call iac_ncerr\(ierr,'defvar_'//trim\(vname\)\)) S
LHL
/f0 F
(!  ) S
/f2 F
(enddo) S
LHL
/f0 F
(!  ) S
/f2 F
(do n = 1,size\(iaco,dim=1\)) S
LHL
/f0 F
(!     ) S
/f2 F
(write\(vname,'\(a,i2.2\)'\) 'iaco',n) S
LHL
/f0 F
(!     ) S
/f2 F
(ierr = nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidiac,varid\)) S
LHL
/f0 F
(!     ) S
/f2 F
(call iac_ncerr\(ierr,'defvar_'//trim\(vname\)\)) S
LHL
/f0 F
(!  ) S
/f2 F
(enddo) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Agcamsetden\) == 1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( clm_iac_carbon_scaling \) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
EndPage
EndDSCPage
EndSheet

%%Page: 10 10
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 617 def
/PageNumber 10 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
648 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i=1,long_gcam_timestep) S
LHL
(     num=0) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp,dim=1\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( ncrop = 1,iac_gcam_ncrops) S
LHL
(           num=num+1) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a,i4.4\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('gcami_scalar') S
0.000 0.000 0.000 FG
(,num,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcami_fld_names\(n\)\)//) S
0.000 0.545 0.000 FG
(') S
SL
(_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcami_crop_names\(ncrop\)\)//) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(,gcamiinterpyr\(i\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidgcami,varid\),subname//) S
0.000 0.545 0.000 FG
(':defvar) S
SL
(_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamo,dim=1\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('gcamo') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcamo_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidgcamo,varid\),subname//) S
0.000 0.545 0.000 FG
(':defvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(tr) S
SL
(im) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmi,dim=1\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmi') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_glmi_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidglm,varid\),subname//) S
0.000 0.545 0.000 FG
(':defvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
SL
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmi_wh') S
0.000 0.000 0.000 FG
(,1,) S
0.000 0.545 0.000 FG
('_woodharvest') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidglmiwh,varid\),subname//) S
0.000 0.545 0.000 FG
(':defvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
SL
(\(vname\),__LINE__\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmo,dim=1\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmo') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_glmo_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,vname,NF90_DOUBLE,dimidglm,varid\),subname//) S
0.000 0.545 0.000 FG
(':defvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
SL
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_enddef\(ncid\),subname//) S
0.000 0.545 0.000 FG
(':enddef') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(EClock\(iac_EClock_Agcamsetden\) == 1 ) S
/f1 F
0.804 0.000 0.000 FG
(.and.) S
/f0 F
0.000 0.000 0.000 FG
( clm_iac_carbon_scaling \) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     iacymd_hold = EClock\(iac_Eclock_ymd\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array3\(iac_gcam_ncrops,cdata%i\(iac_cdatai_gcam_naez\),cdata%i\(iac_cdatai_gcam_nreg\)\)) S
SL
(\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( iyr=1,long_gcam_timestep) S
LHL
(        num=0) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp,dim=1\)) S
LHL
(           ij = 0) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,cdata%i\(iac_cdatai_gcam_nreg\)) S
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,cdata%i\(iac_cdatai_gcam_naez\)) S
LHL
(                 ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( ncrop = 1,iac_gcam_ncrops) S
LHL
(                    ij = ij+1) S
LHL
(                    array3\(ncrop,i,j\) = gcamiinterp\(n,ij,iyr\)) S
LHL
(                 ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
(           ) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( ncrop = 1,iac_gcam_ncrops) S
LHL
(              num=num+1) S
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a,i4.4\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('gcami_scalar') S
0.000 0.000 0.000 FG
(,num,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcami_fld_names\(n\)\)) S
SL
(//) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcami_crop_names\(ncrop\)\)//) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(,gcamiinterpyr\(iyr\)) S
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,vname,varid\),subname//) S
0.000 0.545 0.000 FG
(':inqvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__) S
SL
(LINE__\)) S
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,array3\(ncrop,:,:\)\),subname//) S
0.000 0.545 0.000 FG
(':putvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
SL
(\(vname\),__LINE__\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     EClock\(iac_Eclock_ymd\) = iacymd_hold) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array3\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array3\(cdata%i\(iac_cdatai_gcam_naez\),cdata%i\(iac_cdatai_gcam_nreg\),cdata%i\(iac_cdatai_) S
SL
(gcamo_ntime\)\)\)) S
EndPage
EndDSCPage
EndSheet

%%Page: 11 11
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 678 def
/PageNumber 11 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
720 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamo,dim=1\)) S
LHL
(     ij = 0) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( k = 1,cdata%i\(iac_cdatai_gcamo_ntime\)) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,cdata%i\(iac_cdatai_gcam_nreg\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,cdata%i\(iac_cdatai_gcam_naez\)) S
LHL
(              ij = ij+1) S
LHL
(              array3\(i,j,k\) = gcamo\(n,ij\)) S
LHL
(           ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('gcamo') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_gcamo_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,vname,varid\),subname//) S
0.000 0.545 0.000 FG
(':inqvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,array3\),subname//) S
0.000 0.545 0.000 FG
(':putvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array3\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\(cdata%i\(iac_cdatai_glm_nx\),cdata%i\(iac_cdatai_glm_ny\)\)\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmi,dim=1\)) S
LHL
(     ij = 0) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,cdata%i\(iac_cdatai_glm_ny\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,cdata%i\(iac_cdatai_glm_nx\)) S
LHL
(        ij = ij+1) S
LHL
(        array2\(i,j\) = glmi\(n,ij\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmi') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_glmi_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,vname,varid\),subname//) S
0.000 0.545 0.000 FG
(':inqvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,array2\),subname//) S
0.000 0.545 0.000 FG
(':putvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( n = 1,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(glmo,dim=1\)) S
LHL
(     ij = 0) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,cdata%i\(iac_cdatai_glm_ny\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,cdata%i\(iac_cdatai_glm_nx\)) S
LHL
(        ij = ij+1) S
LHL
(        array2\(i,j\) = glmo\(n,ij\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmo') S
0.000 0.000 0.000 FG
(,n,) S
0.000 0.545 0.000 FG
('_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(iac_glmo_fld_names\(n\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,vname,varid\),subname//) S
0.000 0.545 0.000 FG
(':inqvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,array2\),subname//) S
0.000 0.545 0.000 FG
(':putvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(allocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\(cdata%i\(iac_cdatai_gcam_naez\),cdata%i\(iac_cdatai_gcam_nreg\)\)\)) S
LHL
(  ij = 0) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,cdata%i\(iac_cdatai_gcam_nreg\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( i = 1,cdata%i\(iac_cdatai_gcam_naez\)) S
LHL
(        ij = ij+1) S
LHL
(        array2\(i,j\) = glmi_wh\(ij\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(vname,) S
0.000 0.545 0.000 FG
('\(a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
0.000 0.545 0.000 FG
('glmi_wh') S
0.000 0.000 0.000 FG
(,1,) S
0.000 0.545 0.000 FG
('_woodharvest') S
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,vname,varid\),subname//) S
0.000 0.545 0.000 FG
(':inqvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,array2\),subname//) S
0.000 0.545 0.000 FG
(':putvar_') S
0.000 0.000 0.000 FG
(//) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(vname\),__LINE__\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(array2\)) S
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_close\(ncid\),subname//) S
0.000 0.545 0.000 FG
(':close') S
0.000 0.000 0.000 FG
(,__LINE__\)) S
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(-------- end history file ------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
( ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Aglm = 1) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \(fast_oneway_iac_coupling\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(     EClock\(iac_EClock_ymd\) = iacymd_orig) S
LHL
(     EClock\(iac_Eclock_tod\) = iactod_orig) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_run_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
EndPage
EndDSCPage
EndSheet

%%Page: 12 12
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 750 def
/PageNumber 12 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
792 BeginPage
/f2 F
false BG
0.000 0.000 0.804 FG
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: iac_final_mod) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_final_mod) S
/f0 F
0.000 0.000 0.000 FG
(\( \)) S
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(! ) S
/f2 F
(Finalize iac model) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(------------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(   ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!LOCAL VARIABLES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( subname='\(iac_final_mod\)') S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
LHL
/f0 F
(!) S
/f2 F
(---------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
0.000 0.000 0.804 FG
(!  ) S
/f2 F
(Cleanup GCAM) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(gcam_final_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(glm_final_mod) S
/f0 F
0.000 0.000 0.000 FG
(\(\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiinterp\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(deallocate) S
/f0 F
0.000 0.000 0.000 FG
(\(gcamiold\)) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_final_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(====================================================================================) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: iac_diag) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
(\(string,array\)) S
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(! ) S
/f2 F
(iac array diagnostic) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(------------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(   ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\) ::) S
0.000 0.000 0.804 FG
( string) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(*8, ) S
/f1 F
0.804 0.000 0.000 FG
(pointer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( array\(:,:\)) S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!LOCAL VARIABLES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( nj,j) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( subname='\(iac_diag\)') S
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
LHL
/f0 F
(!) S
/f2 F
(---------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(     nj = ) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(array,dim=1\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(do) S
/f0 F
0.000 0.000 0.000 FG
( j = 1,nj) S
LHL
(        ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,) S
0.000 0.545 0.000 FG
('\(2a,i3,2f13.6\)') S
0.000 0.000 0.000 FG
(\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(subname\)//) S
0.000 0.545 0.000 FG
(' ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(string\),j, ) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(              ) S
/f1 F
0.804 0.000 0.000 FG
(minval) S
/f0 F
0.000 0.000 0.000 FG
(\(array\(j,:\)\),) S
/f1 F
0.804 0.000 0.000 FG
(maxval) S
/f0 F
0.000 0.000 0.000 FG
(\(array\(j,:\)\)) S
LHL
(     ) S
/f1 F
0.804 0.000 0.000 FG
(enddo) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_diag) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: iac_ncerr) S
EndPage
EndDSCPage
EndSheet

%%Page: 13 13
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 822 def
/PageNumber 13 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
864 BeginPage
/f2 F
false BG
0.000 0.000 0.804 FG
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\( ret, mes, line \)) S
PHL
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
(! ) S
/f2 F
(iac netcdf error diagnostic) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(------------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(   ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(intent) S
/f0 F
0.000 0.000 0.000 FG
(\(in\) ::) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(         ret                 ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(return code from netCDF library routine) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\), ) S
/f1 F
0.804 0.000 0.000 FG
(intent) S
/f0 F
0.000 0.000 0.000 FG
(\(in\) ::) S
/f1 F
0.804 0.000 0.000 FG
(&) S
/f0 F
0.000 0.000 0.000 FG
LHL
(         mes                 ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(message to be printed if error detected) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
(, ) S
/f1 F
0.804 0.000 0.000 FG
(intent) S
/f0 F
0.000 0.000 0.000 FG
(\(in\), ) S
/f1 F
0.804 0.000 0.000 FG
(optional) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( line) S
0.000 0.000 0.000 FG
PHL
LHL
(    ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(-----------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
( \( ret ) S
/f1 F
0.804 0.000 0.000 FG
(.ne.) S
/f0 F
0.000 0.000 0.000 FG
( NF90_NOERR \) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(if) S
/f0 F
0.000 0.000 0.000 FG
(\() S
/f1 F
0.804 0.000 0.000 FG
(present) S
/f0 F
0.000 0.000 0.000 FG
(\(line\)\) ) S
/f1 F
0.804 0.000 0.000 FG
(then) S
/f0 F
0.000 0.000 0.000 FG
LHL
(          ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(6,*\) mes, line) S
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(else) S
/f0 F
0.000 0.000 0.000 FG
(   ) S
LHL
(          ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(6,*\) mes) S
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(end if) S
/f0 F
0.000 0.000 0.000 FG
LHL
(       ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(6,*\) nf90_strerror\( ret \)) S
LHL
(       ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(jt        call endrun \('HANDLE_NCERR'\)) S
LHL
/f0 F
0.000 0.000 0.000 FG
(       ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(abort) S
/f0 F
0.000 0.000 0.000 FG
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(endif) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(return) S
/f0 F
0.000 0.000 0.000 FG
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(====================================================================================) S
LHL
/f0 F
(!) S
/f2 F
(---------------------------------------------------------------------------) S
LHL
/f0 F
(!) S
/f2 F
(BOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!IROUTINE: write_iac_restart) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!INTERFACE:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(  ) S
/f1 F
0.804 0.000 0.000 FG
(subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(write_iac_restart) S
/f0 F
0.000 0.000 0.000 FG
(\(rpointfile,rstfile,ymd,varname,var\)) S
PHL
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!DESCRIPTION:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(write restart for iac model) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!USES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f1 F
0.804 0.000 0.000 FG
(use) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_cal_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
(    ) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(implicit) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
1.000 0.271 0.000 FG
(none) S
/f0 F
0.000 0.000 0.000 FG
PHL
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!ARGUMENTS:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( ymd) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(real) S
/f0 F
0.000 0.000 0.000 FG
(\(r8\) ::) S
0.000 0.000 0.804 FG
( var\(:,:\)) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\) ::) S
0.000 0.000 0.804 FG
( varname) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\) ::) S
0.000 0.000 0.804 FG
( rpointfile) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\) ::) S
0.000 0.000 0.804 FG
( rstfile) S
0.000 0.000 0.000 FG
PHL
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!LOCAL VARIABLES:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
/f3 F
1.000 0.271 0.000 FG
(integer) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( year,mon,day,iun,status,dimid2\(2\),ncid,varid,varidymd,dimid,nmode) S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(len=*\),) S
/f1 F
0.804 0.000 0.000 FG
(parameter) S
/f0 F
0.000 0.000 0.000 FG
( ::) S
0.000 0.000 0.804 FG
( subname='\(write_iac_restart\)') S
0.000 0.000 0.000 FG
LHL
(    ) S
/f3 F
1.000 0.271 0.000 FG
(character) S
/f0 F
0.000 0.000 0.000 FG
(\(256\) ::) S
0.000 0.000 0.804 FG
( filename) S
0.000 0.000 0.000 FG
PHL
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(!REVISION HISTORY:) S
LHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
0.000 0.000 0.804 FG
(! ) S
/f2 F
(Author: T Craig) S
PHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(EOP) S
PHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
LHL
(    ) S
0.000 0.000 0.804 FG
(!) S
/f2 F
(---------------------------------------------------------------------------) S
PHL
/f0 F
0.000 0.000 0.000 FG
(    ) S
PHL
(    ) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_cal_date2ymd) S
/f0 F
0.000 0.000 0.000 FG
(\(ymd,year,mon,day\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(filename,) S
0.000 0.545 0.000 FG
('\(a,i4.4,a,i2.2,a\)') S
0.000 0.000 0.000 FG
(\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rstfile\)//) S
0.000 0.545 0.000 FG
('r.') S
0.000 0.000 0.000 FG
(,year,) S
0.000 0.545 0.000 FG
('.nc') S
0.000 0.000 0.000 FG
PHL
(    ) S
EndPage
EndDSCPage
EndSheet

%%Page: 14 14
/Lines 923 def
/PageCount 14 def
1 BeginSheet
BeginDSCPage
/LineNumber 894 def
/PageNumber 14 def
/HeaderLinesLeft[
 [/h0 (iac_comp_mod.F90)]
 [/h1 (~/iESM/models/lnd/clm/src/iac/giac/coupling/)]
]def
/HeaderLinesRight[
 [/h0 /pagenumberstring load]
 [/h1 (08/07/2017)]
]def
2 SetHeaderLines
936 BeginPage
/f0 F
false BG
0.000 0.000 0.000 FG
(    iun = shr_file_getunit\(\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(open) S
/f0 F
0.000 0.000 0.000 FG
(\(iun,file=) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rpointfile\),form=) S
0.000 0.545 0.000 FG
('formatted') S
0.000 0.000 0.000 FG
(\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iun,) S
0.000 0.545 0.000 FG
('\(a\)') S
0.000 0.000 0.000 FG
(\) ) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(filename\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(close) S
/f0 F
0.000 0.000 0.000 FG
(\(iun\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(shr_file_freeunit) S
/f0 F
0.000 0.000 0.000 FG
(\(iun\)) S
PHL
(    ) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' write_restart rpointer ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(rpointfile\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(write) S
/f0 F
0.000 0.000 0.000 FG
(\(iulog,*\) subname,) S
0.000 0.545 0.000 FG
(' write_restart file     ') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(trim) S
/f0 F
0.000 0.000 0.000 FG
(\(filename\)) S
PHL
(    ) S
LHL
(    nmode = ) S
/f1 F
0.804 0.000 0.000 FG
(ior) S
/f0 F
0.000 0.000 0.000 FG
(\(NF90_CLOBBER,NF90_64BIT_OFFSET\)) S
PHL
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_create\(filename,nmode,ncid\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('dim1') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(var,dim=1\),dimid2\(1\)\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_dim\(ncid,) S
0.000 0.545 0.000 FG
('dim2') S
0.000 0.000 0.000 FG
(,) S
/f1 F
0.804 0.000 0.000 FG
(size) S
/f0 F
0.000 0.000 0.000 FG
(\(var,dim=2\),dimid2\(2\)\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,varname,NF90_DOUBLE,dimid2,varid\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_def_var\(ncid,) S
0.000 0.545 0.000 FG
('ymd') S
0.000 0.000 0.000 FG
(,NF90_INT,varidymd\),subname,__LINE__\)) S
PHL
(    ) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_enddef\(ncid\),subname,__LINE__\)) S
PHL
(    ) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_inq_varid\(ncid,varname,varid\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varid,var\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_put_var\(ncid,varidymd,ymd\),subname,__LINE__\)) S
LHL
(    ) S
/f1 F
0.804 0.000 0.000 FG
(call) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_ncerr) S
/f0 F
0.000 0.000 0.000 FG
(\(nf90_close\(ncid\),subname,__LINE__\)) S
PHL
(    ) S
LHL
(  ) S
/f1 F
0.804 0.000 0.000 FG
(end subroutine) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(write_iac_restart) S
/f0 F
0.000 0.000 0.000 FG
PHL
LHL
0.000 0.000 0.804 FG
(!) S
/f2 F
(====================================================================================) S
PHL
/f0 F
0.000 0.000 0.000 FG
LHL
/f1 F
0.804 0.000 0.000 FG
(end module) S
/f0 F
0.000 0.000 0.000 FG
( ) S
/f3 F
0.000 0.000 0.545 FG
(iac_comp_mod) S
/f0 F
0.000 0.000 0.000 FG
PHL
EndPage
EndDSCPage
EndSheet

%%Trailer
%%Pages: 14

EndDoc

%%EOF
